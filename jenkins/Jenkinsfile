import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import hudson.tasks.test.AbstractTestResultAction;

def selectedNode = "${env.BUILD_BRANCH}" == 'master' && "${env.ENVIRONMENT}" == 'prd' ? 'prd-node' : 'master'
def STAGE_NAME ="";

pipeline {
    agent {
        docker {
            image 'maven:3.6.3-amazoncorretto-11'
            args '-v /root/.m2:/root/.m2'
        }
    }
    // using the Timestamper plugin we can add timestamps to the console log
    options {
        timestamps()
    }
    stages {
        stage("git") {
            steps {
                script{
                    STAGE_NAME=env.STAGE_NAME
                }
                checkout scm
            }
        }
        stage('build') {
            steps {
                script{
                    STAGE_NAME=env.STAGE_NAME
                }
                sh 'java -version'
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                script{
                    STAGE_NAME=env.STAGE_NAME
                }
                sh 'mvn test'
            }
            post {
                success {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Sonar'){
          steps {
              script{
                  STAGE_NAME=env.STAGE_NAME
              }
              echo 'sonar stage'
          }
        }
        stage('Deliver') {
            steps {
                script{
                    STAGE_NAME=env.STAGE_NAME
                }
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
    post {
        failure {
            // notify users when the Pipeline fails
            echo "Failed stage name: ${STAGE_NAME}"
            echo  "Failed Pipeline: ${currentBuild.fullDisplayName} Something is wrong with ${env.BUILD_URL}"
        }
    }
}
