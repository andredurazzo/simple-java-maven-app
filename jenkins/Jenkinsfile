import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import hudson.tasks.test.AbstractTestResultAction;

def selectedNode = "${env.BUILD_BRANCH}" == 'develop' ? 'develop node' : 'production'

pipeline {
    agent {
        docker {
            image 'maven:3.6.3-amazoncorretto-11'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('initial'){
          steps{
               echo selectedNode
          }
        }
        stage('Build') {
            steps {
                sh 'java -version'
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Sonar'){
          steps {
            echo 'sonar stage'
          }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
